name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: ghcr.io/anasserekysy/melodify:latest

jobs:
  build-client:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install client dependencies
        run: npm install
        working-directory: ./client/client

      - name: Run client unit tests
        run: npm test -- --watch=false --browsers=ChromeHeadless
        working-directory: ./client/client

      - name: Build client
        run: npm run build -- --configuration production
        working-directory: ./client/client

  dockerize-and-push:
    runs-on: ubuntu-latest
    needs: build-client

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push Docker images
        run: |
          IMAGE_NAME=${IMAGE_NAME} docker compose -f ./docker-compose.yml build
          IMAGE_NAME=${IMAGE_NAME} docker compose -f ./docker-compose.yml push

  deploy:
    name: Deploy to OVH
    runs-on: ubuntu-latest
    needs: dockerize-and-push

    steps:
      - name: Deploy to OVH via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.OVH_HOST }}
          username: ${{ secrets.OVH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: IMAGE_NAME
          script: |
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GHCR_TOKEN }}
            docker image prune -a -f
            docker container prune -f
            docker stop melodify || true
            docker rm melodify || true
            docker pull $IMAGE_NAME
            docker run -d \
              --name melodify \
              -p 5204:5001 \
              --restart unless-stopped \
              $IMAGE_NAME



