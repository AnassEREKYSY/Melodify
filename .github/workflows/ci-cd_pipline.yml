name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/melodify:latest

jobs:
  build-client:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install client dependencies
        run: npm install
        working-directory: ./client/client

      - name: Run client unit tests
        run: npm test -- --watch=false --browsers=ChromeHeadless
        working-directory: ./client/client

      - name: Build client
        run: npm run build -- --configuration production
        working-directory: ./client/client

  dockerize-and-push:
    runs-on: ubuntu-latest
    needs: build-client

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push Docker images
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
        run: |
          IMAGE_NAME=${IMAGE_NAME} docker compose -f ./docker-compose.yml build
          IMAGE_NAME=${IMAGE_NAME} docker compose -f ./docker-compose.yml push

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: dockerize-and-push

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Deploy and Start Monitoring Containers
  #       env:
  #         IMAGE_NAME: ${{ env.IMAGE_NAME }}
  #       run: |
  #         IMAGE_NAME=${IMAGE_NAME} docker compose -f ./docker-compose.yml pull
  #         IMAGE_NAME=${IMAGE_NAME} docker compose -f ./docker-compose.yml up -d
